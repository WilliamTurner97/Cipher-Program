/** @author William Turner
  * @version 1.1
  * Object for monoalphabetic cipher key
 */ 
public class Key {
  
  String keystring;
  
  int[] indexes = new int[26];
 
  public Key (String s) {
    
    keystring = s;
    
    for(int i = 0; i < s.length(); i++) {
      
      indexes[((int) s.charAt(i)) - 97] = i;
    }
      
    }
  
  /** gets the character at an index in the key
    * @param int i the index to get the character at
    * @return <code>keystring.charAt(i)<code> the caracter at a given index
   */ 
  public char charAt(int i) {
    
   return keystring.charAt(i); 
  }
  
  /** gets the index of a given character in the key
    * @param char c the character to find the index of
    * @return <code>indexof<code> int variable of character index
   */ 
  public int indexOf(char c) {
     
    return indexes[((int) c) - 97];
  }
  
  /** gets the length of the keystring
    * @return <code>keystring.length()<code>
   */ 
  public int length() {
    
    return keystring.length();
    
  }
  
  /** sets the keystring of a key
    * @param String s the new keystring
   */ 
  public void setString(String s){
    
   this.keystring = s; 
  }
}
